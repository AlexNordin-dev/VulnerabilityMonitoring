// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VulnerabilityMonitoring.Models;

#nullable disable

namespace VulnerabilityMonitoring.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240505163948_DataProductd")]
    partial class DataProductd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VulnerabilityMonitoring.Models.Entities.ProjectEntity", b =>
                {
                    b.Property<Guid>("RepositoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastRunTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSloName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectsPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepositoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RepositoryId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("VulnerabilityMonitoring.Models.Entities.VulnerablePackageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdvisoryURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolvedVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VulnerableProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VulnerableProjectId");

                    b.ToTable("VulnerablePackages");
                });

            modelBuilder.Entity("VulnerabilityMonitoring.Models.Entities.VulnerablePackageEntity", b =>
                {
                    b.HasOne("VulnerabilityMonitoring.Models.Entities.ProjectEntity", "VulnerableProject")
                        .WithMany("VulnerableProjectPackage")
                        .HasForeignKey("VulnerableProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VulnerableProject");
                });

            modelBuilder.Entity("VulnerabilityMonitoring.Models.Entities.ProjectEntity", b =>
                {
                    b.Navigation("VulnerableProjectPackage");
                });
#pragma warning restore 612, 618
        }
    }
}
